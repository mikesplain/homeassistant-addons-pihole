name: Builder

env:
  BUILD_ARGS: "--test"
  MONITORED_FILES: "build.yaml config.json Dockerfile rootfs"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  init:
    runs-on: ubuntu-latest
    name: Initialize builds
    outputs:
      changed_addons: ${{ steps.changed_addons.outputs.addons }}
      changed: ${{ steps.changed_addons.outputs.changed }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.2.0

      - name: Get changed files
        id: changed_files
        uses: jitterbit/get-changed-files@v1

      - name: Find add-on directories
        id: addons
        uses: home-assistant/actions/helpers/find-addons@master

      - name: Get changed add-ons
        id: changed_addons
        run: |
          declare -a changed_addons
          for addon in ${{ steps.addons.outputs.addons }}; do
            if [[ "${{ steps.changed_files.outputs.all }}" =~ $addon ]]; then
              for file in ${{ env.MONITORED_FILES }}; do
                  if [[ "${{ steps.changed_files.outputs.all }}" =~ $addon/$file ]]; then
                    if [[ ! "${changed_addons[@]}" =~ $addon ]]; then
                      changed_addons+=("\"${addon}\",");
                    fi
                  fi
              done
            fi
          done

          changed=$(echo ${changed_addons[@]} | rev | cut -c 2- | rev)

          if [[ -n ${changed} ]]; then
            echo "Changed add-ons: $changed";
            echo "changed=true" >> $GITHUB_OUTPUT;
            echo "addons=[$changed]" >> $GITHUB_OUTPUT;
          else
            echo "No add-on had any monitored files changed (${{ env.MONITORED_FILES }})";
          fi
  build:
    needs: init
    runs-on: ubuntu-latest
    if: needs.init.outputs.changed == 'true'
    name: Build ${{ matrix.arch }} add-on
    strategy:
      matrix:
        addon: ${{ fromJson(needs.init.outputs.changed_addons) }}
        arch: ["aarch64", "amd64", "armhf", "armv7"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4.2.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.2.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "./${{ matrix.addon }}"

      - name: Build and push
        uses: docker/build-push-action@v5.3.0
        with:
          context: ./${{ matrix.addon }}
          file: ./${{ matrix.addon }}/Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ github.repository_owner }}/home-assistant-addon-${{ matrix.addon }}-${{ matrix.arch }}:${{ fromJson(steps.info.outputs.version) }}
          build-args: |
            BUILD_ARCH=${{ matrix.arch }}
            BUILD_FROM=ghcr.io/hassio-addons/base-${{ matrix.arch }}:latest
            BUILD_VERSION=${{ fromJson(steps.info.outputs.version) }}
